on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

name: Deploy

env:
  AWS_REGION: us-east-2
  IMAGE_NAME: kafka-interactor
  CLUSTER_NAME: dev-cluster2
  ECR_REPOSITORY: ${{ secrets.ECR_REPO_NAME }}
  IMAGE_TAG: latest
  # build platform is important when you build image using runner that has not the same platform as ec2 uses
  PLATFORM: linux/amd64
  DEPLOYMENT_NAME: kafka-interactor-deployment

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout
        uses: actions/checkout@v3.3.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2.0.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1.5.0

      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          # Build a docker container and push it to ECR 
          docker build --platform $PLATFORM -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f docker/service.dockerfile .
          echo "Pushing image to ECR..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install kubectl
        uses: azure/setup-kubectl@v1

      # retrieve config
      - name: Configure kubectl
        run: |
            aws eks update-kubeconfig --name $CLUSTER_NAME --region $AWS_REGION

      - name: Deploy to EKS
        run: |
            export KUBECONFIG=$HOME/.kube/config
            kubectl apply -f deployment/kafka-interactor.yaml
            kubectl apply -f deployment/load-balancer.yaml
            kubectl patch deployment $DEPLOYMENT_NAME -p "{\"spec\":{\"template\":{\"metadata\":{\"labels\":{\"date\":\"`date +'%s'`\"}}}}}"
